# Generated by Django 3.0.6 on 2020-05-10 15:58

import apps.users.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('first_name', models.CharField(max_length=30, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=30, verbose_name='Фамилия')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Дата регистрации')),
                ('sex', models.CharField(choices=[('m', 'мужской'), ('f', 'женский')], max_length=1, verbose_name='Пол')),
                ('weight', models.IntegerField(blank=True, help_text='В кг.', null=True, verbose_name='Вес')),
                ('height', models.IntegerField(blank=True, help_text='В см.', null=True, verbose_name='Рост')),
                ('bdate', models.DateField(blank=True, help_text='В формате ГГГ-ММ-ДД', null=True, verbose_name='Дата рождения')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to=apps.users.models.get_avatar_path)),
                ('is_active', models.BooleanField(default=True, help_text='Сделайте профиль неактивным вместо удаление', verbose_name='Активность')),
                ('is_staff', models.BooleanField(default=False, help_text='Отметьте, если пользователь может входить в административную часть сайта', verbose_name='Статус персонала')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'пользователь',
                'verbose_name_plural': 'пользователи',
            },
            managers=[
                ('objects', apps.users.models.UserManager()),
            ],
        ),
    ]
